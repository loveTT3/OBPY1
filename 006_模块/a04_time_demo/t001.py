
import time
'''

'''

# 获取时间戳
'''
时间戳(timestamp) ：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。
我们运行“type(time.time())”，返回的是float类型。
'''
print('当前时间戳：',time.time())


# 获取格式化时间对象
# 默认参数是当前系统时间戳
print('格式化时间对象：',time.gmtime()) #GMT
print('本地格式化时间：',time.localtime())
print('本地格式化时间（带时间戳）：',time.localtime(1))


# 格式化时间对象和字符串之间的转换
# 两个参数  第一个格式 第二个时间对象
print(time.strftime('%Y-%m-%d %H:%M:%S'))  # 大小小大大大

# 把时间字符串转换成时间对象
s = time.strptime('2020-2-2 12:12:22','%Y-%m-%d %H:%M:%S')  # 大小小大大大
print(s)

# 时间对象转换时间戳
print('时间戳：',time.mktime(time.localtime()))


print('------------------分割线---------------------')
# 结构化时间 --> %a %b %d %H:%M:%S %Y串
# time.asctime(结构化时间) 如果不传参数，直接返回当前时间的格式化串
print(time.asctime(time.localtime(123489000)))
print(time.asctime())
#时间戳 --> %a %d %d %H:%M:%S %Y串
#time.ctime(时间戳)  如果不传参数，直接返回当前时间的格式化串
print(time.ctime())
print(time.ctime(1233444))



'''
%y 两位数的年份表示（00-99）
%Y 四位数的年份表示（000-9999）
%m 月份（01-12）
%d 月内中的一天（0-31）
%H 24小时制小时数（0-23）
%I 12小时制小时数（01-12）
%M 分钟数（00=59）
%S 秒（00-59）
%a 本地简化星期名称
%A 本地完整星期名称
%b 本地简化的月份名称
%B 本地完整的月份名称
%c 本地相应的日期表示和时间表示
%j 年内的一天（001-366）
%p 本地A.M.或P.M.的等价符
%U 一年中的星期数（00-53）星期天为星期的开始
%w 星期（0-6），星期天为星期的开始
%W 一年中的星期数（00-53）星期一为星期的开始
%x 本地相应的日期表示
%X 本地相应的时间表示
%Z 当前时区的名称
%% %号本身
'''