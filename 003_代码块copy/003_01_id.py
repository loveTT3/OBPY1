# id  is
# id 内存地址
# id相同，值肯定相同
# 值相同  id可能不同
s1 = 'alex'
s2 = 'alex'
print(id(s1), '  ',id(s2))
print(s1 is s2) 

# 代码块
# 一个模块 一个函数 一个类
'''
Python在执行同一个代码块的初始化对象的命令时，会检查是否其值是否已经存在，如果存在，会将其重用。
换句话说：执行同一个代码块时，遇到初始化对象的命令时，他会将初始化的这个变量与值存储在一个字典中，在遇到新的变量时，
会先在字典中查询记录，如果有同样的记录那么它会重复使用这个字典中的之前的这个值。
所以在你给出的例子中，文件执行时（同一个代码块）会把i1、i2两个变量指向同一个对象，满足缓存机制则他们在内存中只存在一个，即：id相同。

对象    int str bool
　  int(float):任何数字在同一代码块下都会复用。
　　bool:True和False在字典中会以1，0方式存在，并且复用。
　　str：几乎所有的字符串都会符合缓存机制，具体规定如下（了解即可！）
'''
t1 = (1,2)
t2 = (1,2)
print(id(t1),id(t2))   # 不同




# 不同代码块的缓存机制    小数据池
i1 = 1000
i2 = 1000
print(i1 is i2)
'''对象    int str bool
　  int(float):-5 - 256
　　bool:True和False在字典中会以1，0方式存在，并且复用。
　　str：几乎所有的字符串都会符合缓存机制，具体规定如下（了解即可！）
'''


def func():
    i1 = 1000
    print(id(i1))  

def func2():
    i1 = 1000
    print(id(i1))  
# 不一样
func()
func2()
